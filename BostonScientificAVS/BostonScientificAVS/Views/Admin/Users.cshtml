@model List<BostonScientificAVS.Models.ApplicationUser>

@{
    ViewData["Title"] = "Users";
}

@*<link rel="stylesheet" href="~/css/bootstrap.css">
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css">*@


<style>
    /*.table-custom {
                                                    width: 60%;
                                                    float: left;
                                                    margin-right: 30px;
                                                }*/

    /*   table.dataTable {
                                                    width: 800px;
                                                    margin: 0 auto;
                                                    clear: both;
                                                    border-collapse: separate;
                                                    border-spacing: 0;
                                                }*/

    #myTable {
        width: 100%;
        margin: 0 auto;
        clear: both;
        border-collapse: separate;
        border-spacing: 0;
    }

    div.dataTables_info {
        position: absolute
    }

    div.dataTables_wrapper div.dataTables_paginate {
        float: none;
        text-align: right;
    }

    .table-active {
        background-color: darkblue;
        color: aliceblue;
    }

    .right {
        width: 550px;
        float: right;
        margin-left: auto;
    }

    .left {
        display: flex;
        float: left;
        margin: 0 75px;
        width: auto;
    }

    .full {
        display: flex;
    }

    .right label {
        display: inline-block;
        width: 120px;
        text-align: right;
        margin-right: 10px;
    }

    .right input,
    .right select {
        width: 200px;
        box-sizing: border-box;
    }

    .button-container {
        display: flex;
        justify-content: space-between;
    }


    .btn1 {
        display: flex;
        padding-right: 85px;
        margin: auto;
    }

    .btn2 {
        display: flex;
        padding-left: 30px;
        padding-right: 30px;
        margin: 20px 15px;
    }

    .flex1 {
        margin: 20px 0;
    }

    .flex {
        display: contents;
    }

    .bi-filetype-csv::before {
        content: "\f743";
        margin: 0 6px;
    }

    #download {
        margin-left: 197px;
    }

    #download1{
        margin:auto;
        text-align:center;
    }


</style>


<div class="download-btn-container">
    <a title="Download List" class="dropbtn">
        <i class="bi bi-person-circle"></i>
    </a>
    <div id="myDropdown2" class="dropdown-download">
        <a href="#">Manage Users</a>
        <a href="#">Manage Database</a>
        <a href="#">Logout</a>
    </div>
</div>

<h3 class="top1">Existing Users</h3>
<hr />

@*<form id="userForm">*@
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-6">
            @*  <div class="full">
            <div class="left">*@
            <table class="table table-custom table-responsive table-hover" id="myTable">
                <thead>
                    <tr class="table-active">
                        <th>EmpId</th>
                        <th>Name</th>
                        <th>Role</th>
                        <th class="action">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var us in Model)
                        {
                            <tr>
                                <td width="2px">@us.EmpID</td>
                                <td width="2px">@us.UserFullName</td>
                                <td width="2px">@us.UserRole</td>
                                <td width="2px">
                                    @*<button type="button" class="btn btn-primary" onclick="editUser(this)">Edit</button>*@
                                    <i class="bi bi-pencil-square" onclick="editUser(this)"></i>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4">
                                <div>
                                    No Records Available at this Moment!
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @*  </div>
        </div>*@


        <div class="col-lg-6">
            <div class="col-lg-2"></div>
            <h3 class="text-center">Add/Edit User</h3>
            <hr />
            @* <div class="flex">*@
           
            <div class="row">
               
                <div class="col-lg-4">
                    <label for="EmpID">EmpID:</label>
                </div>
                <div class="col-lg-4">
                    <input type="text" id="EmpID" class="form-control" name="EmpID" />
                </div>

            </div>
            <div class="row mt-2">
                <div class="col-lg-4">
                    <label for="UserFullName">UserFullName:</label>
                </div>
                <div class="col-lg-4">
                    <input type="text" id="UserFullName" class="form-control" name="UserFullName" />
                </div>
            </div>
            <div class="row mt-2">
                <div class="col-lg-4">
                    <label for="UserRole">UserRole:</label>
                </div>
                <div class="col-lg-4">
                    <select id="UserRole" name="UserRole" class="form-control">
                        @foreach (UserRole role in Enum.GetValues(typeof(UserRole)))
                        {
                            <option value="@((int)role)">@role</option>
                        }
                    </select>
                </div>
            </div>
            <div class="row mt-2">
                <div class="col-lg-4">
                    <label for="csvFile"><i class="bi bi-filetype-csv"></i>Upload CSV File:</label>
                </div>
                <div class="col-lg-5">
                    <input type="file" id="csvFile" accept=".csv" />
                </div>
                <div class="col-lg-2">
                    <button type="button" class="btn btn-primary" onclick="importCsv()">Upload</button>
                </div>
            </div>
            <div class="row mt-2" id="download">
                <div class="col-lg-4">
                    <label for="download"><b>Download:</b></label><br />
                    <a href="@Url.Action("DownloadCSV", "Admin")" download id="download1"><i class="bi bi-download"></i> Download CSV
                    </a>
                </div>
            </div>
            <div class="row mt-2">
                <div class="text-center">
                    <button type="button" class="btn btn-primary" onclick="saveUser()">Save</button>
                </div>
            </div>
        </div>

        @* </div>*@
    </div>
</div>
@*
</form>*@

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
@*<link rel="stylesheet" href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.css" />
<script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.js"></script><script type="text/javascript" src="jquery.dataTables.js"></script>
<script type="text/javascript" src="dataTables.scrollingPagination.js"></script>*@


<script>

   

      new DataTable('#myTable', {
    
});

    let isEditing = false;

    function editUser(button) {
        var row = button.parentNode.parentNode;
        var empID = row.cells[0].innerText;
        var userFullName = row.cells[1].innerText;
        var userRole = row.cells[2].innerText;


        document.getElementById("EmpID").value = empID;
        document.getElementById("UserFullName").value = userFullName;


        var select = document.getElementById("UserRole");
        for (var i = 0; i < select.options.length; i++) {
            if (select.options[i].text === userRole) {
                select.selectedIndex = i;
                break;
            }
        }

        isEditing = true;
    }




    function saveUser() {

        var empId = document.getElementById("EmpID").value;
        var fullName = document.getElementById("UserFullName").value;
        var userRole = document.getElementById("UserRole").value;


        var user = {
            EmpID: empId,
            UserFullName: fullName,
            UserRole: userRole
        }

        if (isEditing) {
            user.EmpID = parseInt(user.EmpID);
        }

        submitform(user);
    }


    function importCsv() {
        var fileInput = document.getElementById('csvFile');
        var file = fileInput.files[0];

        var formData = new FormData();
        formData.append('file', file);

        $.ajax({
            url: '/Admin/importCsv',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                alert("CSV file uploaded successfully!");
                location.reload();
            },
            error: function (error) {
                console.log(error);
                alert("Error uploading CSV file!");
            }
        });
    }


    function submitform(user) {

        $.ajax({
            url: '/Admin/SaveUser',
            type: 'POST',
            data: user,
            success: function (response) {
                if (response.message && response.message === "Updated successfully!") {
                    alert("User updated successfully!");
                } else {
                    alert("User saved successfully!");
                }
                location.reload();
            },
            error: function (error) {
                console.log(error);
                alert("Error saving user!");
            }
        });

        isEditing = false;

    }
</script>

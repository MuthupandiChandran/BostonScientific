@model List<Entity.Transaction>
@using Entity

@{
    ViewData["Title"] = "Transaction Table";
}
<div class="navigation-header-items">
    <div class="dropdown">
        <button class="custom-config-button" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <img class="avatar-image-size" src="~/assets/images/user_avatar.png" />
            <span class="user-name-text">Hello, @User.Identity.Name | @User.Claims.FirstOrDefault(c => c.Type == "EmpID")?.Value</span>
        </button>
        <div class="dropdown-menu custom-config-dropdown" aria-labelledby="dropdownMenuButton">

            @if (User.IsInRole("Admin"))
            {
                <a class="dropdown-item text-color-blue" asp-area="" asp-controller="Admin" asp-action="Users">Manage Users</a>
                <a class="dropdown-item text-color-blue" asp-area="" asp-controller="Admin" asp-action="Items">Manage Database</a>
                <a class="dropdown-item text-color-blue" asp-area="" asp-controller="Admin" asp-action="TransactionTable">Transaction</a>
                <a class="dropdown-item text-color-blue" asp-area="" asp-controller="Admin" asp-action="Settings">Settings</a>
            }
            <a class="dropdown-item text-color-blue" asp-area="" asp-controller="Login" asp-action="Logout">Logout</a>
        </div>
    </div>

    <div class="navigation-back">
        <div class="session-time">
            <h6 class="session-expires-text text-color-blue">Your Session Expires On</h6>
            <h6 id="timer" class="session-expire-time text-color-blue"></h6>
        </div>
        <div>
            <a class="button" href="javascript:history.go(-1)" @*asp-area="" asp-controller="Home" asp-action="HomeScreen"*@><img class="back-button-img" src="/assets/images/back-arrow.png" /><span class="back-text">Back</span></a>
        </div>
    </div>
</div>

<h2>Transaction Table</h2>
<hr/>

<form id="tbl-search" method="get" action="@Url.Action("TransactionTable")">
    <label for="startDate">Start Date:</label>
    <input type="date" id="startDate" name="startDate" autocomplete="off" />
    <label for="endDate">End Date:</label>
    <input type="date" id="endDate" name="endDate" autocomplete="off" />
    <button type="submit">Search</button>
    <a href="@Url.Action("ExportTransactionData")" id="exportLink">Export Data</a>
    <!-- Hidden input fields for startDate and endDate -->
    <input type="hidden" id="hiddenStartDate" name="hiddenStartDate" />
    <input type="hidden" id="hiddenEndDate" name="hiddenEndDate" />
</form>

<select id="searchbar" onchange="myFunction()">
    <option value="All">All</option>
    <option value="Packaging">Packaging</option>
    <option value="Boxing">Boxing</option>
</select>


<table class="table">
    <thead>
        <tr>
            <th>Transaction Id</th>
            <th>Product Label GTIN</th>
            <th>Carton Label GTIN</th>
            <th>DB GTIN</th>
            <th>WO Lot No</th>
            <th>Product Lot No</th>
            <th>Carton Lot No</th>
            <th>WO Catalog No</th>
            <th>Db Catalog No</th>
            <th>ShelfLife</th>
            <th>WO Mfg Date</th>
            <th>Calculated Use By</th>
            <th>Product Use By</th>
            <th>Carton Use By</th>
            <th>DB Label Spec</th>
            <th>Product Label Spec</th>
            <th>Carton Label Spec</th>
            <th>DB IFU</th>
            <th>Scanned IFU</th>
            <th>User</th>
            <th>Date Time</th>
            <th>Rescan Initiated</th>
            <th>Result</th>
            <th>Failure Reason</th>
            <th>Supervisor Name</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var record in Model)
        {
            <tr>
                <td>@record.Transaction_Id</td>
                <td>@record.Product_Label_GTIN</td>
                <td>@record.Carton_Label_GTIN</td>
                <td>@record.DB_GTIN</td>
                <td>@record.WO_Lot_Num</td>
                 <td>@record.Product_Lot_Num</td>
                  <td>@record.Carton_Lot_Num</td>
                   <td>@record.WO_Catalog_Num</td>
                    <td>@record.DB_Catalog_Num</td>
                     <td>@record.Shelf_Life</td>
                      <td>@record.WO_Mfg_Date</td>
                       <td>@record.Calculated_Use_By</td>
                        <td>@record.Product_Use_By</td>
                         <td>@record.Carton_Use_By</td>
                          <td>@record.DB_Label_Spec</td>
                           <td>@record.Product_Label_Spec</td>
                            <td>@record.Carton_Label_Spec</td>
                             <td>@record.DB_IFU</td>
                              <td>@record.Scanned_IFU</td>
                               <td>@User.Identity.Name</td>
                                <td>@record.Date_Time</td>
                                 <td>@record.Rescan_Initated</td>
                                  <td>@record.Result</td>
                                   <td>@record.Failure_Reason</td>
                                   <td>@record.Supervisor_Name</td>
            </tr>
        }
    </tbody>
</table>
<div id="toast" style="visibility: hidden;">
    User time limit reached, it will automatically logout.
</div>
<style>
    .table{
        overflow:auto;
    }
    hr{
        color: black;
        font-weight: 200;
        margin-top: -4px;
    }

    .table thead th {
        border: 1px solid #dee2e6;
        background-color: #003C71;
        color: aliceblue;
        font-weight: bold;
        padding: 8px;
    }

    /* Style for table rows */
    .table tbody td {
        border: 1px solid #dee2e6;
        padding: 8px;
    }
    #tbl-search{
        float:right;
    }

    #toast {
        max-width: 300px;
        background-color: #333;
        color: #fff;
        text-align: center;
        border-radius: 6px;
        padding: 16px;
        position: fixed;
        z-index: 1;
        left: 50%;
        bottom: 30px;
        transform: translateX(-50%);
    }
</style>


<script type="text/javascript">
    var toastVisible = true; // Initially set to true so the message is not displayed
    var timerHasStarted = false;
    var intervalId;
    var isPaused = false;
    var pauseDuration = 60;

    $(() => {


        function startTimer(duration) {
        if (!isPaused) {
        var timerDisplay = document.getElementById("timer");

        var timer = duration;
        var hours, minutes, seconds;

        intervalId = setInterval(function () {
            hours = parseInt(timer / 3600, 10);
            minutes = parseInt((timer % 3600) / 60, 10);
            seconds = parseInt(timer % 60, 10);

            hours = hours < 10 ? "0" + hours : hours;
            minutes = minutes < 10 ? "0" + minutes : minutes;
            seconds = seconds < 10 ? "0" + seconds : seconds;

            timerDisplay.textContent = hours + ":" + minutes + ":" + seconds;

                    if (timer == 1800) {
                        if (!timerHasStarted) {
                            displayToast();
                            timerHasStarted = true;
                            isPaused = true;
                        }
                    }

            if (--timer < 0) {
                clearInterval(intervalId);
                // Perform any action you need when the timer reaches 00:00:00
                window.location.href = "/Login/Logout";
                //alert("Timer has expired!");
            }
          }, 1000);
        }
       }

            function displayToast() {
                if (toastVisible) {
                    var toast = document.getElementById("toast");
                    toast.style.visibility = "visible";
                    toastVisible = false; // Set to false to hide the message

                    setTimeout(function () {
                        toast.style.visibility = "hidden";
                        isPaused = false;
                    }, pauseDuration * 1000); // Display the toast message for 1 minute
                }
            }

    // Local Storage is already set in homescreen so just obtain it here
    var expirationTime = localStorage.getItem("expiration_time");


    // Get the expiration time from localStorage
    var currentTime = Math.floor(Date.now() / 1000);
    var remainingTime = expirationTime - currentTime;
    startTimer(remainingTime);

    });
    document.getElementById("exportLink").addEventListener("click", function (e) {
        e.preventDefault(); // Prevent the link from navigating

        // Get the selected startDate and endDate values
        var startDate = document.getElementById("startDate").value;
        var endDate = document.getElementById("endDate").value;

        // Set the hidden input fields with the selected values
        document.getElementById("hiddenStartDate").value = startDate;
        document.getElementById("hiddenEndDate").value = endDate;

        // Submit the form to the ExportTransactionData action
        document.getElementById("tbl-search").action = "@Url.Action("ExportTransactionData")";
        document.getElementById("tbl-search").submit();

        // Clear the selected date values
        document.getElementById("startDate").value = "";
        document.getElementById("endDate").value = "";
    });

        function myFunction() {
            var selectedFilter = document.getElementById("searchbar").value;
            var tableRows = document.querySelectorAll("tbody tr");

            tableRows.forEach(function (row) {
                // Get the values of the Carton-related columns
                var cartonLotNum = row.querySelector("td:nth-child(7)").textContent.trim();
                var cartonUseBy = row.querySelector("td:nth-child(13)").textContent.trim();
                var cartonLabelSpec = row.querySelector("td:nth-child(16)").textContent.trim();

                if (selectedFilter === "Boxing") {
                    // Check if all three Carton columns have non-null values
                    if (cartonLotNum && cartonUseBy && cartonLabelSpec) {
                        row.style.display = "table-row"; // Display the row
                    } else {
                        row.style.display = "none"; // Hide the row
                    }
                } else if (selectedFilter === "Packaging") {
                    // Check if any of the Carton columns are null or empty
                    if (!cartonLotNum || !cartonUseBy || !cartonLabelSpec) {
                        row.style.display = "table-row"; // Display the row
                    } else {
                        row.style.display = "none"; // Hide the row
                    }
                } else {
                    // Show all rows when "ALL" is selected
                    row.style.display = "table-row";
                }
            });
        }

</script>

